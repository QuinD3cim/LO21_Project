Creer_regle() : regle 
    Creer(r) : regle
    premisses(r) = INDEFINI
    conclusion(r) = INDEFINI
    Creer_regle() = r 
fin

Inserer_conclusion(r : regle) : regle
    conclusion(r) = lire(c_entree)
    inserer_conclusion(r) = r
fin

supprimer_premisse(r : regle, intitule_premisse : chaîne de caractères) : regle
    copie_premisse : liste_premisse
    Si est_premisse_vide(premisses(r)) = VRAI alors
        supprimer_premisse(r, intitule_premisse) = r 
    Sinon si est_premisse_vide(suivant(premisses(r))) = VRAI alors faire
        Si premisse(premisses(r)) = intitule_premisse alors
            supprimer_premisse(r,intitule_premisse) = INDEFINI
        Sinon
            supprimer_premisse(r,intitule_premisse) = r 
        fin si
    Sinon
        Tant que est_premisse_vide(suivant(premisses(r))) = FAUX ET premisse(suivant(premisses(r))) != intitule_premisse faire
            premisses(r) = suivant(premisses(r))
        fin tant que
        Si est_premisse_vide(suivant(premisses(r))) = FAUX alors
            copie_premisse = suivant(premisses(r))
            suivant(premisses(r)) = suivant(suivant(premisses(r)))
            libérer(copie_premisse)
        fin si
    fin si
    supprimer_premisse(r,intitule_premisse) = r
fin

premisse_tete(r : regle) : premisse
    premisse_tete(r) = premisses(r)
fin

creer_base() : BC
    
Début
    Creer(base) : BC
    regle(base) <-- INDEFINI
    suivant(base) <-- INDEFINI
    creer_base() <-- base
fin

ajouter_regle_tete(base : BC, r : regle) : BC
    
Début    
    nouvelle_connaissance : BC
    nouvelle_connaissance <-- creer_base()
    Creer(regle(nouvelle_connaissance)) : regle
    regle(nouvelle_connaissance) <-- r
    suivant(nouvelle_connaisance) <-- base
    retourner nouvelle_connaissance
fin

ajouter_regle(base : BC, r : regle) : BC

Début
    Si regle(base) = INDEFINI alors
        retourner ajouter_regle_tete(base, r)
    Sinon
        retourner ajouter_regle_tete(ajouter_regle(suivant(base), r),regle(base))
    fin si
fin
